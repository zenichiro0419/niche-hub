// src/application/services/AuthService.ts
import { IUserRepository } from '../../domain/repositories/IUserRepository';
import { User } from '../../domain/entities/User';

export class AuthService {
    private userRepository: IUserRepository;

    constructor(userRepository: IUserRepository) {
        this.userRepository = userRepository;
    }

    async register(email: string, username: string, password: string): Promise<User> {
        // Registration logic here
        const newUser = await this.userRepository.createUser({ email, username, password });
        return newUser;
    }

    async login(email: string, password: string): Promise<User | null> {
        // Login logic here
        const user = await this.userRepository.findUserByEmail(email);
        if (user && user.password === password) {
            return user;
        }
        return null;
    }

    async logout(): Promise<void> {
        // Logout logic here
        // Clear session or token
    }
}